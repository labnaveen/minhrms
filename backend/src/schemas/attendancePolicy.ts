import Joi from "joi";

export const AttendancePolicyCreationSchema = Joi.object({
    name: Joi.string().required().example('GV Standard'),
    description: Joi.string().optional(),
    biometric: Joi.boolean().optional(),
    web: Joi.boolean().optional(),
    app: Joi.boolean().optional(),
    manual: Joi.boolean().optional(),
    attendance_cycle_start: Joi.number(),
    default_attendance_status: Joi.number(),
    regularisation_status: Joi.array().items(Joi.number()).optional(),
    half_day: Joi.boolean().optional(),
    min_hours_for_half_day: Joi.number().optional(),
    show_display_rules_for_employees: Joi.boolean().optional(),
    display_overtime_hours: Joi.boolean().optional(),
    display_deficit_hours: Joi.boolean().optional(),
    display_late_mark: Joi.boolean().optional(),
    display_average_working_hours: Joi.boolean().optional(),
    display_average_in_time: Joi.boolean().optional(),
    display_average_out_time: Joi.boolean().optional(),
    display_number_of_leaves_taken: Joi.boolean().optional(),
    display_present_number_of_days: Joi.boolean().optional(),
    display_absent_number_of_days: Joi.boolean().optional(),
    flexibility_hours: Joi.boolean().optional(),
    call_out_regularisation: Joi.boolean().optional(),
    round_off: Joi.boolean().optional(),
    auto_approval_attendance_request: Joi.boolean().optional(),
    regularisation_restriction: Joi.boolean().optional(),
    regularisation_restriction_limit: Joi.number().optional(),
    regularisation_limit_for_month: Joi.number(),
    bypass_regularisation_proxy: Joi.boolean().optional(),
    location_based_restriction: Joi.boolean().optional(),
    location_mandatory: Joi.boolean().optional(),
    location: Joi.string().optional(),
    distance_allowed: Joi.number().optional(),
    mobile_app_restriction: Joi.boolean().optional(),
    number_of_devices_allowed: Joi.number().optional()
})


export const AttendancePolicyUpdationSchema = Joi.object({
    name: Joi.string().optional().example('GV Standard'),
    description: Joi.string().optional(),
    biometric: Joi.boolean().optional(),
    web: Joi.boolean().optional(),
    app: Joi.boolean().optional(),
    manual: Joi.boolean().optional(),
    attendance_cycle_start: Joi.number(),
    default_attendance_status: Joi.number(),
    regularisation_status: Joi.array().items(Joi.number()).optional(),
    half_day: Joi.boolean().optional(),
    min_hours_for_half_day: Joi.when('half_day', {is: true, then: Joi.number().required(), otherwise: Joi.optional()}).optional(),
    show_display_rules_for_employees: Joi.boolean().optional(),
    display_overtime_hours: Joi.boolean().optional(),
    display_deficit_hours: Joi.boolean().optional(),
    display_late_mark: Joi.boolean().optional(),
    display_average_working_hours: Joi.boolean().optional(),
    display_average_in_time: Joi.boolean().optional(),
    display_average_out_time: Joi.boolean().optional(),
    display_number_of_leaves_taken: Joi.boolean().optional(),
    display_present_number_of_days: Joi.boolean().optional(),
    display_absent_number_of_days: Joi.boolean().optional(),
    flexibility_hours: Joi.boolean().optional(),
    call_out_regularisation: Joi.boolean().optional(),
    round_off: Joi.boolean().optional(),
    auto_approval_attendance_request: Joi.boolean().optional(),
    regularisation_restriction: Joi.boolean().optional(),
    regularisation_restriction_limit: Joi.when('regularisation_restriction', {is: true, then: Joi.number().required(), otherwise: Joi.optional()}).optional(),
    regularisation_limit_for_month: Joi.when('regularisation_restriction', {is: true, then: Joi.number().required(), otherwise: Joi.optional() }).optional(),
    bypass_regularisation_proxy: Joi.boolean().optional(),
    location_based_restriction: Joi.boolean().optional(),
    location_mandatory: Joi.boolean().optional(),
    location: Joi.string().optional(),
    distance_allowed: Joi.number().optional(),
    mobile_app_restriction: Joi.boolean().optional(),
    number_of_devices_allowed: Joi.when('mobile_app_restriction', {is: true, then: Joi.number().required(), otherwise: Joi.optional()})
})